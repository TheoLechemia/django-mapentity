name: CI

on:
  pull_request:
  push:
    branches:
      - master
  release:
    types:
      - created
  schedule:
    - cron: '0 2 * * *'

jobs:
  lint:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.6  # check pylint with minimal supported python version

      - name: Install flake8
        run: |
          python -m pip install flake8 -U

      - name: Lint with flake8
        run: |
          flake8 mapentity test_project test_app


  doc_build:
    name: Sphinx doc is building
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          pip install -r docs/requirements.txt -U

      - name: Build html docs
        run: |
          cd docs
          make html


  test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10' ]
        django-version: [ 2.2.*, 3.2.*, 4.0.* ]
        exclude:
          - django-version: 4.0.*
            python-version: '3.6'
          - django-version: 4.0.*
            python-version: '3.7'

    steps:
    - uses: actions/checkout@v2

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install gettext libproj-dev binutils gdal-bin libgdal-dev libsqlite3-mod-spatialite libcairo2 libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info libpangoft2-1.0-0 libjpeg-dev libopenjp2-7-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install .[dev]
        pip install Django==${{ matrix.django-version }} -U

    - name: Check pending migrations
      run: |
        ./manage.py makemigrations --check

    - name: Test with coverage
      run: |
        coverage run ./manage.py test -v3
        coverage report -m

    - name: Coverage upload
      run: |
        pip install codecov
        codecov

  publish:
    needs: [lint, doc_build, test]
    runs-on: ubuntu-18.04
    if: ${{ github.event_name == 'release' && github.event.action == 'created' }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install setuptools wheel twine -U
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist
          twine upload dist/*
